{"version":3,"sources":["components/Messages/Messages.module.scss","components/Messages/SearchDialogForm/SearchDialogForm.module.scss","components/Messages/NewMessageForm/NewMessageForm.module.scss","components/Messages/MessagesArea/MessagesArea.module.scss","components/Messages/MessagesArea/MessageItem/MessageItem.module.scss","../node_modules/classnames/index.js","components/Messages/DialogsArea/DialogsArea.module.scss","components/Messages/DialogsArea/DialogsItem/DialogsItem.module.scss","components/Messages/SearchDialogForm/SearchDialogForm.jsx","components/Messages/NewMessageForm/NewMessageForm.jsx","components/Messages/MessagesArea/MessageItem/MessageItem.jsx","components/Messages/MessagesArea/MessagesArea.jsx","components/Messages/DialogsArea/DialogsItem/DialogsItem.jsx","components/Messages/DialogsArea/DialogsArea.jsx","components/Messages/Messages.jsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","reduxForm","form","handleSubmit","onSubmit","className","s","searchForm","Field","component","name","type","placeholder","search","maxLength300","maxLength","TextArea","FormElement","newMessage","validate","messageArea","sendButton","MessageItem","messageText","sendTime","isMyMessage","cn","myMessage","space","message","messageTime","connect","state","messagesData","messagesPage","messagesArea","map","m","text","time","id","DialogsItem","userName","onlineStatus","userAvatar","path","userID","to","activeClassName","active","dialogs__item","userInfo","userAva","src","alt","onlineInfo","dialogsData","dialogsArea","d","status","avatar","checkSendingMessage","messages","dialogs__wrap","messages__wrap","formData","newMessageBody"],"mappings":"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","file":"static/js/3.2a08481e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3-1gv\",\"dialogs__wrap\":\"Messages_dialogs__wrap__3B9MV\",\"active\":\"Messages_active__37Imb\",\"messages__wrap\":\"Messages_messages__wrap__1h47p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchDialogForm_searchForm__3O2xQ\",\"search\":\"SearchDialogForm_search__3Hk5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessage\":\"NewMessageForm_newMessage__1Z1kv\",\"messageArea\":\"NewMessageForm_messageArea__1WedB\",\"sendButton\":\"NewMessageForm_sendButton__1jEr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesArea\":\"MessagesArea_messagesArea__2EfG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageItem\":\"MessageItem_MessageItem__z_BUT\",\"message\":\"MessageItem_message__3Cr_W\",\"messageText\":\"MessageItem_messageText__1sO9g\",\"messageTime\":\"MessageItem_messageTime__hrN1h\",\"myMessage\":\"MessageItem_myMessage__3bM6h\",\"space\":\"MessageItem_space__lNiAH\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsArea\":\"DialogsArea_dialogsArea__2MA0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__item\":\"DialogsItem_dialogs__item__1beqX\",\"userInfo\":\"DialogsItem_userInfo__25hlc\",\"userAva\":\"DialogsItem_userAva__2vqfV\",\"userName\":\"DialogsItem_userName__34fkg\",\"onlineInfo\":\"DialogsItem_onlineInfo__2O1DC\",\"active\":\"DialogsItem_active__2wFCZ\"};","import { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./SearchDialogForm.module.scss\";\r\n\r\nconst SearchDialogForm = ({handleSubmit}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.searchForm}>\r\n      <Field\r\n        component={\"input\"}\r\n        name={\"searchDialogBody\"}\r\n        type=\"text\"\r\n        placeholder=\"Search dialog with...\"\r\n        className={s.search}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"searchDialog\" })(SearchDialogForm);\r\n","import s from \"./NewMessageForm.module.scss\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength } from \"../../../helpers/validators/validators\";\r\nimport { FormElement } from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength300 = maxLength(300);\r\nconst TextArea = FormElement(\"textarea\");\r\n\r\nconst NewMessageForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form className={s.newMessage} onSubmit={handleSubmit}>\r\n      <Field\r\n        component={TextArea}\r\n        name={\"newMessageBody\"}\r\n        validate={[maxLength300]}\r\n        placeholder=\"Write message\"\r\n        className={s.messageArea}\r\n      />\r\n      <button className={s.sendButton}>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"newMessageForm\" })(NewMessageForm);\r\n","import s from \"./MessageItem.module.scss\";\r\nimport cn from \"classnames\";\r\nconst MessageItem = ({ messageText, sendTime, isMyMessage }) => {\r\n  return (\r\n    <div className={cn({ [s.myMessage]: isMyMessage }, s.MessageItem)}>\r\n      <div className={s.space}></div>\r\n      <div className={s.message}>\r\n        <div className={s.messageText}>{messageText}</div>\r\n        <div className={s.messageTime}>{sendTime}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import s from \"./MessagesArea.module.scss\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MessagesArea = ({messagesData}) => {\r\n  return (\r\n    <div className={s.messagesArea}>\r\n      {messagesData.map((m) => (\r\n        <MessageItem\r\n          key={m.id}\r\n          messageText={m.text}\r\n          sendTime={m.time}\r\n          isMyMessage={m.isMyMessage}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    messagesData: state.messagesPage.messagesData,\r\n  };\r\n};\r\nexport default connect(mapStatetoProps)(MessagesArea);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./DialogsItem.module.scss\";\r\n\r\nconst DialogsItem = ({userName, onlineStatus, userAvatar, userID}) => {\r\n  let path = \"/messages/\" + userID;\r\n\r\n  return (\r\n    <NavLink to={path} activeClassName={s.active}>\r\n      <div className={s.dialogs__item}>\r\n        <div className={s.userInfo}>\r\n          <img className={s.userAva} src={userAvatar} alt=\"UserAva\" />\r\n          <p className={s.userName}>{userName}</p>\r\n        </div>\r\n        <div className={s.onlineInfo}>{onlineStatus}</div>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogsItem;\r\n","import { connect } from \"react-redux\";\r\nimport s from \"./DialogsArea.module.scss\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\n\r\nconst DialogsArea = ({dialogsData}) => {\r\n  return (\r\n    <div className={s.dialogsArea}>\r\n      {dialogsData.map((d) => (\r\n        <DialogsItem\r\n          userName={d.userName}\r\n          onlineStatus={d.status}\r\n          userAvatar={d.avatar}\r\n          key={d.id}\r\n          userID={d.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.messagesPage.dialogsData,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(DialogsArea);\r\n","import s from \"./Messages.module.scss\";\r\nimport SearchDialogForm from \"./SearchDialogForm/SearchDialogForm\";\r\nimport NewMessageForm from \"./NewMessageForm/NewMessageForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkSendingMessage } from \"../../redux/messagesPageReducer\";\r\nimport MessagesArea from \"./MessagesArea/MessagesArea\";\r\nimport DialogsArea from \"./DialogsArea/DialogsArea\";\r\n\r\nconst Messages = ({checkSendingMessage}) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    checkSendingMessage(formData.newMessageBody)\r\n  }\r\n  \r\n  return (\r\n    <div className={s.messages}>\r\n      <div className={s.dialogs__wrap}>\r\n        <SearchDialogForm />\r\n        <DialogsArea />\r\n      </div>\r\n      <div className={s.messages__wrap}>\r\n        <MessagesArea />\r\n        <NewMessageForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { checkSendingMessage })(Messages);\r\n"],"sourceRoot":""}